<?php


namespace App\Services;
use Exception;

class MessageGenerationService
{
    public function getIncorrectDateMessage($language): string
    {
        if ($language == 'ru') {
            return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 2020-04-06!üìÖ";
        } else {
            return "Please select the date in format 2020-04-06!üìÖ";
        }
    }

    public function getIncorrectDestinationMessage(Exception $exception): string
    {
        $message = "Something went wrongü§∑‚Äç‚ôÇÔ∏è Click /vacation to start again!";
        if($exception->getMessage() == "[\"No photos found.\"]") {
            $message = 'No such placeüò¢ Try another place. For example, Moscow';
        }
        return $message;
    }

    public function getVacationReplyMessage(string $language) :string
    {
        if ($language == 'ru') {
            return urlencode("–û—Ç–ª–∏—á–Ω–æ! –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!üòÄ");
        } else {
            return urlencode("Great! Enjoy the photos every day!üòÄ");
        }
    }

    /**
     * @param string $language
     * @return string
     */
    public function getHelpMessage(string $language): string
    {
        if ($language == 'ru') {
            return urlencode("–ü–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å:\n\n/vacation {–ú–µ—Å—Ç–æ} {–î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞} - –≤—ã–±–µ—Ä–∏ –º–µ—Å—Ç–æ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º), –∫—É–¥–∞ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å—Å—è, –∏ –ø–æ–ª—É—á–∞–π —Ñ–æ—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–æ –≤—ã–ª–µ—Ç–∞ (–ù–∞–ø—Ä–∏–º–µ—Ä, /vacation Bali 2020-04-17\n\n/trips - –ø—Ä–æ–≤–µ—Ä—å, –∫–∞–∫–∏–µ –º–µ—Å—Ç–∞ —É–∂–µ —É —Ç–µ–±—è –≤ —Å–ø–∏—Å–∫–µ\n\n/stop {–ú–µ—Å—Ç–æ} {–î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞} - –æ—Å—Ç–∞–Ω–æ–≤–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ (–ù–∞–ø—Ä–∏–º–µ—Ä, /stop Bali 2020-04-17)\");");
        } else {
            return urlencode("Check what I can do:\n\n/vacation {Destination} {Date of departure} - choose the place where you go and date when you will depart to receive daily photo (For example, /vacation Bali 2020-04-17)\n\n/trips - check what trips you already have\n\n/stop {Destination} {Date of departure} - stop receiving photos (For example, /stop Bali 2020-04-17)");
        }
    }

    /**
     * @param string $language
     * @return string
     */
    public function getEnjoyPhotoMessage(string $language): string
    {
        if ($language == 'ru') {
            return "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!‚úàÔ∏è";
        } else {
            return "Great! Now you can enjoy the photos every day!‚úàÔ∏è";
        }
    }

    /**
     * @param string $language
     * @return string
     */
    public function getChooseDestinationMessage(string $language): string
    {
        if ($language == 'ru') {
            return "–í—ã–±–µ—Ä–∏, –∫—É–¥–∞ —Ç—ã –ø–æ–ª–µ—Ç–∏—à—å ‚úàÔ∏è";
        } else {
            return 'Choose your destination ‚úàÔ∏è';
        }
    }

    /**
     * @param string $language
     * @return string
     */
    public function getVacationExistsMessage(string $language): string
    {
        if ($language == 'ru') {
            return "–¢—ã —É–∂–µ –ø–æ–ª—É—á–∞–µ—à—å —Ç–∞–∫–∏–µ —Ñ–æ—Ç–æ üëØ‚Äç‚ôÇÔ∏è";
        } else {
            return "Vacation already exists üëØ‚Äç‚ôÇÔ∏è";
        }
    }

    /**
     * @param string $language
     * @return string
     */
    public function getDontUnderstandMessage(string $language): string
    {
        if ($language == 'ru') {
            return "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—éü§∑‚Äç‚ôÇÔ∏è –ü–æ–ø—Ä–æ–±—É–π /vacation, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫—É–¥–∞ –ø–æ–ª–µ—Ç–∏—à—å.";
        } else {
            return "I don't understand youü§∑‚Äç‚ôÇÔ∏è Try /vacation to choose your destination.";
        }
    }

    /**
     * @param string $language
     * @return string
     */
    public function getSelectDateMessage(string $language): string
    {
        if($language == 'ru') {
            return "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 2020-04-06!üìÖ";
        }
        return "Great! Now select the date in format 2020-04-06!üìÖ";
    }

    public function getGreetingMessage(string $language) :string
    {
        if ($language == 'ru') {
            return urlencode("–ü—Ä–∏–≤–µ—Çüëã\n–Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —Ñ–æ—Ç–æ —Å –º–µ—Å—Ç–∞ —Ç–≤–æ–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –¥–æ –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞ –≤ 9 —É—Ç—Ä–∞!\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /vacation.");
        } else {
            return urlencode("Hiüëã\nI will send photo of your vacation destination every day until the flight at 9am!\nJust write /vacation.");
        }
    }

    public function getNotSentMessage(): string
    {
        return "Message hasn't been sent";
    }

    /**
     * @return string
     */
    public function getStopMessage(): string
    {
        return "Choose destination to stop notifications üôÖ‚Äç‚ôÇÔ∏è";
    }

    /**
     * @param string $destination
     * @param string $date
     * @return string
     */
    public function getDeleteMessage(string $destination, string $date): string
    {
        return "$destination $date deleted";
    }

    /**
     * @param string $destination
     * @param string $date
     * @return string
     */
    public function getTripMessage(string $destination, string $date): string
    {
        return "$destination $date";
    }

    public function getEmptyStopMessage(): string
    {
        return "Such vacation doesn't existüïµÔ∏è‚Äç‚ôÇÔ∏è Try to write in the following format <b>/stop Moscow 2020-01-01</b>";
    }
}
